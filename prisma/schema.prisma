generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Tag {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  slug        String        @db.VarChar(255)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  QuestionTag QuestionTag[]
}

model Difficulty {
  id        Int        @id @default(autoincrement())
  level     String     @unique @db.VarChar(255)
  slug      String     @db.VarChar(255)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  questions Question[]
}

model Question {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  title         String          @db.VarChar(255)
  description   String
  slug          String          @db.VarChar(255)
  difficultyId  Int
  number        Int
  code          String
  difficulty    Difficulty      @relation(fields: [difficultyId], references: [id])
  tags          QuestionTag[]
  QuestionViews QuestionViews[]
}

model QuestionTag {
  id         Int      @id @default(autoincrement())
  questionId Int
  tagId      Int
  question   Question @relation(fields: [questionId], references: [id])
  tag        Tag      @relation(fields: [tagId], references: [id])
}

model QuestionViews {
  id         Int      @id @default(autoincrement())
  questionId Int
  question   Question @relation(fields: [questionId], references: [id])
}

model PostViews {
  id         Int      @id @default(autoincrement())
  slug       String   @db.VarChar(255)
  views      Int
  created_at DateTime @default(now())
}

model User {
  id         Int      @id @default(autoincrement())
  username   String   @db.VarChar(255)
  password   String   @db.VarChar(255)
  created_at DateTime @default(now())
}
